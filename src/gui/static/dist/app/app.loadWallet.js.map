{"version":3,"sources":["app/app.loadWallet.ts"],"names":[],"mappings":"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","file":"app/app.loadWallet.js","sourcesContent":["\n\n//import {Component, OnInit, ViewChild} from 'app/angular2/core';\n//import {ROUTER_DIRECTIVES, OnActivate} from 'app/angular2/router';\nimport {Component, OnInit, ViewChild} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, OnActivate} from 'angular2/router';\n\nimport {Http, HTTP_BINDINGS, Response} from 'angular2/http';\nimport {HTTP_PROVIDERS, Headers} from 'angular2/http';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport {QRCodeComponent} from './ng2-qrcode.ts'\n\n@Component({\n  selector: 'load-wallet',\n  directives: [ROUTER_DIRECTIVES, QRCodeComponent],\n  providers: [],\n  templateUrl: 'app/templates/wallet.html'\n})\n\nexport class loadWalletComponent implements OnInit {\n  //Declare default varialbes\n  wallets : Array<any>;\n  progress: any;\n  spendid: string;\n  spendaddress: string;\n  sendDisable: boolean;\n  readyDisable: boolean;\n  displayMode: DisplayModeEnum;\n  displayModeEnum = DisplayModeEnum;\n\n  QrAddress: string;\n  QrIsVisible: boolean;\n\n  NewWalletIsVisible: boolean;\n  EditWalletIsVisible: boolean;\n  loadSeedIsVisible: boolean;\n\n  walletname: string;\n  walletId: string;\n\n  historyTable: Array<any>;\n  pendingTable: Array<any>;\n  addresses: Array<any>;\n\n  //Constructor method for load HTTP object\n  constructor(private http: Http) { }\n\n  //Init function for load default value\n  ngOnInit() {\n      this.displayMode = DisplayModeEnum.first;\n      this.loadWallet();\n      this.loadProgress();\n\n      //Set interval function for load wallet every 15 seconds\n      setInterval(() => {\n        this.loadWallet();\n        console.log(\"Refreshing balance\");\n      }, 15000);\n\n      //Enable Send tab \"textbox\" and \"Ready\" button by default\n      this.sendDisable = true;\n      this.readyDisable = false;\n      this.pendingTable = [];\n\n      if(localStorage.getItem('historyAddresses') != null){\n          this.addresses = JSON.parse(localStorage.getItem('historyAddresses'));\n      } else {\n          localStorage.setItem('historyAddresses',JSON.stringify([]));\n          this.addresses = JSON.parse(localStorage.getItem('historyAddresses'));\n      }\n  }\n\n  //Ready button function for disable \"textbox\" and enable \"Send\" button for ready to send coin\n  ready(spendId, spendaddress, spendamount){\n    if(!spendId){\n      alert(\"Please select from id\");\n      return false;\n    }\n    if(!spendaddress){\n      alert(\"Please enter pay to\");\n      return false;\n    }\n    if(!spendamount){\n      alert(\"Please enter amount\");\n      return false;\n    }\n    this.readyDisable = true;\n    this.sendDisable = false;\n  }\n\n  //Load wallet function\n  loadWallet(){\n      this.http.post('/wallets', '')\n        .map((res:Response) => res.json())\n        .subscribe(\n          data => {\n            this.wallets = data;\n\n            console.log('walets data is : ' + this.wallets);\n\n            //Load Balance for each wallet\n            //Set http headers\n            var headers = new Headers();\n            headers.append('Content-Type', 'application/x-www-form-urlencoded');\n            var inc = 0;\n            var myInc = 0;\n\n            for(var item in data){\n              var wallet_id = data[inc].meta.filename;\n              //var wallet_id = item.meta.filename;\n              console.log('wallet_id is : ' + wallet_id);\n              console.log('inc is : ' + inc);\n              \n              \n\n              //Post method executed\n              //this.http.post('/wallet/balance', JSON.stringify({id: address}), {headers: headers})\n              this.http.get('/wallet/balance?id=' + wallet_id, {headers: headers})\n              .map((res:Response) => res.json())\n              .subscribe(\n                //Response from API\n                response => {\n                  console.log('load done: ' + myInc);\n                  this.wallets[myInc].balance =  response.confirmed.coins / 1000000;\n                  myInc++;\n                },\n                err => console.log(\"Error on load balance: \"+err),\n                () => console.log('Balance load done')\n              );\n\n              inc++;\n            }\n            //Load Balance for each wallet end\n\n           },\n          err => console.log(\"Error on load wallet: \"+err),\n          () => console.log('Wallet load done')\n        );\n  }\n\n  //Load progress function for Skycoin\n  loadProgress(){\n      //Post method executed\n      this.http.post('/blockchain/progress', '')\n        .map((res:Response) => res.json())\n        .subscribe(\n          //Response from API\n          response => { this.progress = (parseInt(response.current,10)+1) / parseInt(response.highest,10) * 100 },\n          err => console.log(\"Error on load progress: \"+err),\n          () => console.log('Progress load done:' + this.progress)\n        );\n  }\n\n  //Switch tab function\n  switchTab(mode: DisplayModeEnum, wallet) {\n      //\"Textbox\" and \"Ready\" button enable in Send tab while switching tabs\n      this.sendDisable = true;\n      this.readyDisable = false;\n\n      this.displayMode = mode;\n      if(wallet){\n          this.spendid = wallet.meta.filename;\n      }\n  }\n\n  //Show QR code function for show QR popup\n  showQR(wallet){\n      this.QrAddress = wallet.entries[0].address;\n      this.QrIsVisible = true;\n  }\n  //Hide QR code function for hide QR popup\n  hideQrPopup(){\n      this.QrIsVisible = false;\n  }\n\n  //Show wallet function for view New wallet popup\n  showNewWalletDialog(){\n      this.NewWalletIsVisible = true;\n  }\n  //Hide wallet function for hide New wallet popup\n  hideWalletPopup(){\n      this.NewWalletIsVisible = false;\n  }\n\n  //Add new wallet function for generate new wallet in Skycoin\n  createNewWallet(){\n    //Set http headers\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n    //Post method executed\n    this.http.post('/wallet/create', JSON.stringify({name: ''}), {headers: headers})\n    .map((res:Response) => res.json())\n    .subscribe(\n      response => {\n        //Hide new wallet popup\n        this.NewWalletIsVisible = false;\n        alert(\"New wallet created successfully\");\n        //Load wallet for refresh list\n        this.loadWallet();\n      },\n      err => console.log(\"Error on create new wallet: \"+err),\n      () => console.log('New wallet create done')\n    );\n  }\n\n  //Edit existing wallet function\n  editWallet(wallet){\n      this.EditWalletIsVisible = true;\n      this.walletId = wallet.meta.filename;\n  }\n  //Hide edit wallet function\n  hideEditWalletPopup(){\n      this.EditWalletIsVisible = false;\n  }\n\n  //Update wallet function for update wallet label\n  updateWallet(walletid, walletName){\n    //Set http headers\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    var stringConvert = 'name='+walletName+'&id='+walletid;\n    //Post method executed\n    this.http.post('/wallet/update', stringConvert, {headers: headers})\n    .map((res:Response) => res.json())\n    .subscribe(\n      response => {\n        //Hide new wallet popup\n        this.EditWalletIsVisible = false;\n        alert(\"Wallet updated successfully\");\n        //Load wallet for refresh list\n        this.loadWallet();\n      },\n      err => console.log(\"Error on update wallet: \"+JSON.stringify(err)),\n      () => console.log('Update wallet done')\n    );\n  }\n\n  //Load wallet seed function\n  openLoadWallet(walletName, seed){\n    this.loadSeedIsVisible = true;\n  }\n  //Hide load wallet seed function\n  hideLoadSeedWalletPopup(){\n      this.loadSeedIsVisible = false;\n  }\n\n  //Load wallet seed function for create new wallet with name and seed\n  createWalletSeed(walletName, seed){\n    //Set http headers\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    var stringConvert = 'name='+walletName+'&seed='+seed;\n    //Post method executed\n    this.http.post('/wallet/create', stringConvert, {headers: headers})\n    .map((res:Response) => res.json())\n    .subscribe(\n      response => {\n        //Hide load wallet seed popup\n        this.loadSeedIsVisible = false;\n        //Load wallet for refresh list\n        this.loadWallet();\n      },\n      err => console.log(\"Error on create load wallet seed: \"+JSON.stringify(err)),\n      () => console.log('Load wallet seed done')\n    );\n  }\n\n  spend(spendid, spendaddress, spendamount){\n    //Set local storage for history\n    if(localStorage.getItem('historyTable') != null){\n        this.historyTable = JSON.parse(localStorage.getItem('historyTable'));\n    } else {\n        localStorage.setItem('historyTable',JSON.stringify([]));\n        this.historyTable = JSON.parse(localStorage.getItem('historyTable'));\n    }\n\n    this.historyTable.push({address:spendaddress, amount:spendamount});\n    localStorage.setItem('historyTable',JSON.stringify(this.historyTable));\n\n    //Set local storage for addresses history\n    if(localStorage.getItem('historyAddresses') != null){\n        this.addresses = JSON.parse(localStorage.getItem('historyAddresses'));\n    } else {\n        localStorage.setItem('historyAddresses',JSON.stringify([]));\n        this.addresses = JSON.parse(localStorage.getItem('historyAddresses'));\n    }\n\n    this.addresses.push({address:spendaddress, amount:spendamount});\n    localStorage.setItem('historyAddresses',JSON.stringify(this.addresses));\n\n\n    this.readyDisable = true;\n    this.sendDisable = true;\n    //Set http headers\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    var stringConvert = 'id='+spendid+'&coins='+spendamount*1000000+\"&fee=1&hours=1&dst=\"+spendaddress;\n    //Post method executed\n    this.http.post('/wallet/spend', stringConvert, {headers: headers})\n    .map((res:Response) => res.json())\n    .subscribe(\n      response => {\n        this.pendingTable.push({complete: 'Completed', address: spendaddress, amount: spendamount});\n        //Load wallet for refresh list\n        this.loadWallet();\n      },\n      err => {\n        alert(err._body);\n        this.readyDisable = false;\n        this.sendDisable = true;\n        this.pendingTable.push({complete: 'Pending', address: spendaddress, amount: spendamount});\n      },\n      () => console.log('Spend successfully')\n    );\n  }\n\n}\n\n//Set default enum value for tabs\nenum DisplayModeEnum {\n  first = 0,\n  second = 1,\n  third = 2\n}\n"],"sourceRoot":"/source/"}